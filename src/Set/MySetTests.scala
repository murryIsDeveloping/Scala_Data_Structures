package Set

object MySetTests extends App {
  val set = MySet(1,2,3,4)
  val setAlt = MySet(4,5,6,7)
  set.forEach(x => print(x + " "))
  println("APPLY METHOD")
  println(set(4))
  println(set(5))
  println("+")
  println("Add 5")
  (set + 5).forEach(x => print(x + " "))
  println("\nAdd 4")
  (set + 4).forEach(x => print(x + " "))
  println("\nAdd Sets")
  (set ++ setAlt).forEach(x => print(x + " "))
  println("\nMinus 4")
  (set - 4).forEach(x => print(x + " "))
  println("\nMinus 5")
  (set - 5).forEach(x => print(x + " "))
  println("\nMinus Set")
  (set -- setAlt).forEach(x => print(x + " "))
  println("\nMAP")
  set.map(_*2).forEach(x => print(x + " "))
  println("\nFLATMAP")
  set.flatMap(x => MySet(x, x+2)).forEach(x => print(x + " "))
  println("\nFILTER")
  set.filter(_%2 == 0).forEach(x => print(x + " "))
  // Negate
  println("Not Set contains 2")
  println(!set(2))
  println("Not Set contains 10")
  println(!set(2))
  val setOfThrees = !set.filter(_%3==0)
  println("setOfThrees contains 9")
  println(setOfThrees(9))
  println("setOfThrees doesn't contain 3")
  println(setOfThrees(3))
  println("setOfThrees contains 10")
  println((setOfThrees + 10)(9))
}
